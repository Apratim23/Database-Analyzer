<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat - Scanalyst</title>
    <link rel="stylesheet" href="/styles.css">
</head>
<body>
    <div id="app">
        <div id="sidebar">
            <div class="sidebar-header">
                <h2>SCANALYST</h2>
            </div>
            <div class="sidebar-tabs">
                <a href="/database" class="sidebar-tab">Database</a>
                <a href="/chat" class="sidebar-tab hovered">Chat</a>
                <a href="/plot" class="sidebar-tab hovered-2">Plot</a>
            </div>
        </div>
        <div id="chat-container">
            <div id="chat-header">
                <h2>Query Section</h2>
            </div>
            <div id="chat-messages">
                <!-- Chat messages will be populated here -->
            </div>
            <div id="chat-input-container">
                <input type="text" id="chat-input" placeholder="Type your query...">
                <button id="send-button">Send</button>
            </div>
        </div>
    </div>

    <%- include('footer') %>

    <script>
        document.getElementById('send-button').addEventListener('click', sendMessage);
        document.getElementById('chat-input').addEventListener('keydown', function(event) {
            if (event.key === 'Enter' && !event.shiftKey) {
                sendMessage();
            }
        });

        function sendMessage() {
            const input = document.getElementById('chat-input');
            const message = input.value.trim();

            if (message) {
                // Append user message to chat
                const userMessageElement = document.createElement('div');
                userMessageElement.className = 'chat-message user-message';
                userMessageElement.textContent = message;
                document.getElementById('chat-messages').appendChild(userMessageElement);

                // Clear input
                input.value = '';

                // Send message to server
                fetch('/ask', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ question: message })
                })
                .then(response => response.json())
                .then(data => {
                    // Append response to chat
                    handleServerResponse(data);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            }
        }

        function handleServerResponse(response) {
            const responseMessageElement = document.createElement('div');
            responseMessageElement.className = 'chat-message response-message';

            if (response && typeof response === 'object') {
                if (response.plot) {
                    const img = document.createElement('img');
                    img.src = `data:image/png;base64,${response.plot}`;
                    responseMessageElement.appendChild(img);
                } else if (response.dataframe) {
                    responseMessageElement.textContent = formatDataFrame(response.dataframe);
                } else if (response.answer) {
                    responseMessageElement.textContent = response.answer;
                } else if (response.error) {
                    responseMessageElement.textContent = 'Error: ' + response.error;
                } else {
                    responseMessageElement.textContent = 'Unexpected response format';
                }
            } else {
                responseMessageElement.textContent = 'Invalid response from server';
            }

            document.getElementById('chat-messages').appendChild(responseMessageElement);
            document.getElementById('chat-messages').scrollTop = document.getElementById('chat-messages').scrollHeight;
        }

        function formatDataFrame(dataframe) {
            return dataframe.map(row => JSON.stringify(row)).join('\n');
        }
    </script>
</body>
</html>
